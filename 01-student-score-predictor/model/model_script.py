# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oJTlYMeXCNSUkG_VFFdGexBOM_PAzjsl
"""

import pandas as pd
import numpy as np
import joblib
import os
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

from google.colab import files
uploaded = files.upload()

df = pd.read_csv('StudentsPerformance.csv')

X = df.drop(columns=['writing score', 'reading score'])
y = df['math score']

categorical_features = X.select_dtypes(include='object').columns.tolist()
numeric_features = X.select_dtypes(include=np.number).columns.tolist()

categorical_transformer = OneHotEncoder(drop='first')
numeric_transformer = StandardScaler()

# ðŸ”¹ ColumnTransformer
preprocessor = ColumnTransformer([
    ('num', numeric_transformer, numeric_features),
    ('cat', categorical_transformer, categorical_features)
])

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model_pipeline = Pipeline(steps=[
    ('preprocessor', preprocessor),
    ('regressor', LinearRegression())
])

model_pipeline.fit(X_train, y_train)

y_pred = model_pipeline.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

os.makedirs('../model', exist_ok=True)

# ðŸ”¹ save the model
joblib.dump(model_pipeline, '../model/student_score_predictor.pkl')

# save evalaution
with open('../output/metrics_report.txt', 'w') as f:
    f.write(f"Mean Squared Error (MSE): {mse:.2f}\n")
    f.write(f"R-squared Score (R2): {r2:.2f}\n")

print("âœ… Model trained and saved successfully.")
print(f"ðŸ“ˆ MSE: {mse:.2f}")
print(f"ðŸ“Š R2 Score: {r2:.2f}")

